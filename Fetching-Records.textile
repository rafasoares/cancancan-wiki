Sometimes you need to restrict which records are returned from the database based on what the user is able to access. This can be done with the @accessible_by@ method on any Active Record model. Simply pass it the current ability to find only the records which the user is able to @:read@.

<pre>
@articles = Article.accessible_by(current_ability)
</pre>

If you want to fetch records based on some other action, pass it as the second argument. Here only the articles which the user can update are returned.

<pre>
@articles = Article.accessible_by(current_ability, :update)
</pre>

This is an Active Record scope so other scopes and pagination can be chained onto it. If you are using something other than Active Record you can fetch the conditions hash directly from the current ability.

<pre>
current_ability.query(:read, Article).conditions
</pre>

Note: This only works when [[Defining Abilities with Hashes]]. It will raise an exception when [[Defining Abilities with Blocks]].